use dep::std;
use dep::array_helpers;

fn main(pub_key_x: pub [u8; 32], pub_key_y: pub [u8; 32], signature: [u8; 64], message: pub [u8; 32]) {
    let isValid = std::ecdsa_secp256r1::verify_signature(pub_key_x, pub_key_y, signature, message);
    assert(isValid == true);
}

#[test]
fn test_main() {
    let pubkey_x:[u8;32] = [
        130, 168, 47, 232, 124, 209, 16, 120, 109, 18, 209, 96, 216, 121, 233, 185, 145, 63, 107, 79, 130, 86, 220, 131, 35, 124, 151, 52, 150, 247, 136, 52
    ];

    let pubkey_y:[u8;32] = [
        138, 142, 133, 53, 162, 94, 249, 236, 168, 195, 169, 97, 211, 21, 3, 186, 223, 49, 208, 173, 162, 116, 35, 64, 57, 216, 215, 138, 102, 195, 253, 158
    ];

    let signature:[u8;64] = [
        159, 59, 90, 190, 6, 10, 81, 46, 135, 253, 237, 102, 104, 205, 197, 196, 166, 3, 22, 167, 91, 201, 219, 101, 83, 136, 22, 112, 111, 35, 16, 172, 39, 100, 187, 131, 226, 51, 108, 116, 73, 106, 123, 133, 30, 129, 124, 133, 166, 140, 13, 55, 140, 228, 130, 253, 53, 68, 87, 103, 46, 211, 225, 226
    ];

    let message:[u8;32] = [
        132, 13, 109, 10, 18, 87, 145, 101, 60, 131, 124, 255, 55, 217, 84, 43, 184, 7, 189, 8, 122, 204, 97, 233, 187, 160, 119, 225, 177, 195, 174, 98
    ];

    main(pubkey_x, pubkey_y, signature, message);
}
