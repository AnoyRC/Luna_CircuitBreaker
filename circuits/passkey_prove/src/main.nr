use dep::std;

fn main(pub_key_x: pub [u8; 32], pub_key_y: pub [u8; 32], signature: [u8; 64], message: pub [u8; 32]) {
    let isValid = std::ecdsa_secp256r1::verify_signature(pub_key_x, pub_key_y, signature, message);
    assert(isValid == true);
}

#[test]
fn test_main() {
    let pubkey_x:[u8;32] = [
        143, 19, 123, 3, 114, 220, 178, 5, 29, 214, 53, 15, 96, 106, 190, 234, 186, 155, 141, 74, 99, 148, 201, 107, 107, 242, 247, 83, 22, 83, 163, 151
    ];

    let pubkey_y:[u8;32] = [
        197, 66, 47, 217, 173, 170, 153, 43, 213, 181, 236, 63, 196, 31, 237, 64, 16, 103, 42, 14, 216, 80, 191, 192, 159, 156, 132, 194, 164, 157, 189, 135
    ];

    let signature:[u8;64] = [
        205, 224, 67, 83, 246, 46, 11, 41, 1, 178, 200, 104, 216, 231, 143, 251, 231, 2, 235, 79, 115, 164, 216, 243, 101, 29, 107, 65, 241, 190, 137, 183, 187, 32, 154, 106, 162, 42, 192, 128, 27, 254, 65, 62, 162, 223, 54, 130, 47, 43, 206, 255, 225, 127, 20, 179, 56, 163, 225, 183, 139, 154, 226, 27
    ];

    let message:[u8;32] = [
        12, 88, 3, 131, 125, 35, 43, 87, 88, 68, 62, 55, 13, 74, 221, 154, 127, 183, 19, 17, 228, 112, 38, 242, 132, 165, 216, 27, 206, 167, 238, 132
    ];

    main(pubkey_x, pubkey_y, signature, message);
}
